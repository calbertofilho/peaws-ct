PROVA DE CERTIFICAÇÃO - N. VIRGINIA
LEIA TODA A PROVA ANTES DE INICIAR!!!
Tempo para conclusão: 5 horas
Dúvida: Falar com o suporte por meio do Discord através do usuário: @RodrigoTuratti#7522
carlos.r.borzi@gmail.com Alternar conta



*E-mail
*Nome completo
*E-mail
*CPF
*Telefone
* Indica uma pergunta obrigatória

O objetivo desta avaliação é criar um ambiente conforme descrito nas 10 questões
abaixo dentro da região de N. VIRGINIA, cada questão valerá 1 ponto.



#############################################################################################
#                            P  R  E  P  A  R  A  T  I  V  O  S                             #
#############################################################################################
KEY PAIR
  CarlosFilho-ProvaFinal-CloudTreinamentos.pem

ROLES
  CodeDeploy
    Name
      CarlosFilho-ProvaFinal-CloudTreinamentos-AWSCodeDeployRole
    Policy
      AWSCodeDeployRole
  EC2
    Name
      CarlosFilho-ProvaFinal-CloudTreinamentos-AmazonS3ReadOnlyRole
    Policy
      AmazonS3ReadOnlyAccess
      AmazonSSMManagedInstanceCore
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 01 #  Criar um grupo de usuário chamado “Infraestrutura” com permissão total para         #
######  todos serviços, dentro deste grupo você deve criar um usuário chamado Mateus.       #
#       Criar um grupo "Desenvolvimento" com permissão apenas leitura no EC2 e S3, dentro   #
#       deste grupo você deve criar um usuário chamado Caio.                                #
#############################################################################################
Infraestrutura (AdministratorAccess)
  https://upperaws.signin.aws.amazon.com/console
  Mateus    (IAM User)
  9bbU}1$=

Desenvolvimento (AmazonEC2ReadOnlyAccess / AmazonS3ReadOnlyAccess)
  https://upperaws.signin.aws.amazon.com/console
  Caio      (IAM User)
  xh5M[58_
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 02 #  Crie uma VPC com 2 SUBNETS públicas e 2 SUBNETS privadas com bloco 10.1.0.0/16      #
#############################################################################################
VPC
  CIDR
    10.1.0.0/16
  Enable DNS resolution
  Enable DNS hostnames
  Tags
    Name
      CarlosFilho-ProvaFinal-VPC
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos

SUBNETS
  Privada01
    CIDR
      10.1.11.0/24
    AZ
      us-east-1a
    Tags
      Name
        CarlosFilho-ProvaFinal-SubnetPrivate01
      Common
        CarlosFilho-ProvaFinal-CloudTreinamentos
  Privada02
    CIDR
      10.1.12.0/24
    AZ
      us-east-1b
    Tags
      Name
        CarlosFilho-ProvaFinal-SubnetPrivate02
      Common
        CarlosFilho-ProvaFinal-CloudTreinamentos
  Publica01
    CIDR
      10.1.21.0/24
    AZ
      us-east-1a
    Tags
      Name
        CarlosFilho-ProvaFinal-SubnetPublic01
      Common
        CarlosFilho-ProvaFinal-CloudTreinamentos
  Publica02
    CIDR
      10.1.22.0/24
    AZ
      us-east-1b
    Tags
      Name
        CarlosFilho-ProvaFinal-SubnetPublic02
      Common
        CarlosFilho-ProvaFinal-CloudTreinamentos

INTERNET GATEWAY
  Attach VPC
    CarlosFilho-ProvaFinal-VPC
  Tags
    Name
      CarlosFilho-ProvaFinal-IGW
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos

ROUTE TABLE PUBLICA
  Edit routes
    10.1.0.0/16     local
    0.0.0.0/16      Internet Gateway (CarlosFilho-ProvaFinal-IGW)
  Tags
    Name
      CarlosFilho-ProvaFinal-RTBPublic
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  Edit Subnet Associations
    CarlosFilho-ProvaFinal-SubnetPublic01
    CarlosFilho-ProvaFinal-SubnetPublic02

ROUTE TABLE PRIVADA
  Edit routes
    10.1.0.0/16     local
  Tags
    Name
      CarlosFilho-ProvaFinal-RTBPrivate
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  Edit Subnet Associations
    CarlosFilho-ProvaFinal-SubnetPrivate01
    CarlosFilho-ProvaFinal-SubnetPrivate02

SECURITY GROUPS (FIREWALL)
WINDOWS
  Nome
    CarlosFilho-ProvaFinal-SGWin
  Descrição
    Security Group [SG_WINDOWS] liberando as portas necessarias para o acesso remoto
  VPC
    CarlosFilho-ProvaFinal-VPC
  Regras de Entrada
    RDP     3389        0.0.0.0/0
  Regras de Saída
    Todo o tráfego      0.0.0.0/0
  Tags
    Name
      CarlosFilho-ProvaFinal-SGWin
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos

LINUX
  Nome
    CarlosFilho-ProvaFinal-SGLnx
  Descrição
    Security Group [SG_LINUX] liberando as portas necessarias para a aplicação web
  VPC
    CarlosFilho-ProvaFinal-VPC
  Regras de Entrada
    SSH      22         0.0.0.0/0
    HTTP     80         0.0.0.0/0
    HTTPS   443         0.0.0.0/0
  Regras de Saída
    Todo o tráfego      0.0.0.0/0
  Tags
    Name
      CarlosFilho-ProvaFinal-SGLnx
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos

DATABASE
  Name
    CarlosFilho-ProvaFinal-SGDB
  Descrição
    Security Group [SG_DATABASE] liberando as portas necessarias para o banco de dados
  VPC
    CarlosFilho-ProvaFinal-VPC
  Regras de Entrada
    MYSQL    3306       0.0.0.0/0
  Regras de Saída
    Todo o tráfego      0.0.0.0/0
  Tags
    Name
      CarlosFilho-ProvaFinal-SGDB
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos

VPC ENDPOINT
  Name
    CarlosFilho-ProvaFinal-EC2EndpointIC
  Service category
    EC2 Instance Connect Endpoint
  VPC
    CarlosFilho-ProvaFinal-VPC
  Grupo de Segurança
    CarlosFilho-ProvaFinal-SGLnx
  Subnet
    CarlosFilho-ProvaFinal-SubnetPrivate01
  Tags
    Name
      CarlosFilho-ProvaFinal-EndpointEC2IC
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 03 #  Criar uma instância Windows PÚBLICA TOTAL com nome "Windows01", dentro da           #
######  instância instalar e configurar o AWS CLI. Coloque na resposta desta questão o IP   #
#       de acesso, usuário e senha da instancia, utilize o tipo de instância t2.micro.      #
#############################################################################################
Tags
  Name
    Windows01
  Common
    CarlosFilho-ProvaFinal-CloudTreinamentos
AMI
  Microsoft Windows Server 2022 Base
Instância
  t2.micro
Par de Chaves
  CarlosFilho-ProvaFinal-CloudTreinamentos.pem
VPC
  CarlosFilho-ProvaFinal-VPC
Subnet
  CarlosFilho-ProvaFinal-SubnetPublic01
IP Publico
  Habilitar
Grupo de Segurança
  CarlosFilho-ProvaFinal-SGWin
User Data
  <script>
    msiexec.exe /i https://awscli.amazonaws.com/AWSCLIV2.msi /qn
  </script>

Ações >> Obter Senha do Windows

RESPOSTA
  Windows01
    IP Publico
      54.227.225.139
    Usuario
      Administrator
    Senha
      =3-*K4gh$@M;tli6g;Rq=;D4Plha*3!)
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 04 #  Crie 2 instâncias PÚBLICAS TOTAIS com a imagem "ami-0ce99e1aa603296bb", crie        #
######  também um Application Load Balancer entre as 2 instâncias, levando em consideração  #
#       a alta disponibilidade, e utilize instâncias t2.micro.                              #
#############################################################################################
INSTANCIA 1
  Nome
    CarlosFilho-ProvaFinal-Application
  Tags
    Name
      CarlosFilho-ProvaFinal-Application
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  AMI
    ami-0ce99e1aa603296bb
  Instância
    t2.micro
  Par de Chaves
    CarlosFilho-ProvaFinal-CloudTreinamentos.pem
  VPC
    CarlosFilho-ProvaFinal-VPC
  Subnet
    CarlosFilho-ProvaFinal-SubnetPublic01
  IP Publico
    Habilitar
  Grupo de Segurança
    CarlosFilho-ProvaFinal-SGLnx
  IAM Instance Profile
    CarlosFilho-ProvaFinal-CloudTreinamentos-AmazonS3ReadOnlyRole
  Versão de MetaDados
    V1 e V2 (token opcional)
  User Data
    sudo apt update
    sudo apt install -fym ruby-full wget
    cd ~
    wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
    chmod +x ./install
    sudo ./install auto

INSTANCIA 2
  Nome
    CarlosFilho-ProvaFinal-Application
  Tags
    Name
      CarlosFilho-ProvaFinal-Application
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  AMI
    ami-0ce99e1aa603296bb
  Instância
    t2.micro
  Par de Chaves
    CarlosFilho-ProvaFinal-CloudTreinamentos.pem
  VPC
    CarlosFilho-ProvaFinal-VPC
  Subnet
    CarlosFilho-ProvaFinal-SubnetPublic02
  IP Publico
    Habilitar
  Grupo de Segurança
    CarlosFilho-ProvaFinal-SGLnx
  IAM Instance Profile
    CarlosFilho-ProvaFinal-CloudTreinamentos-AmazonS3ReadOnlyRole
  Versão de MetaDados
    V1 e V2 (token opcional)
  User Data
    sudo apt update
    sudo apt install -fym ruby-full wget
    cd ~
    wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
    chmod +x ./install
    sudo ./install auto

GRUPO DESTINO (TARGET GROUP)
  Target type
    Instances
  Nome
    CarlosFilho-ProvaFinal-TG
  Protocolo
    HTTP    80
  Tipo IP
    IPv4
  VPC
    CarlosFilho-ProvaFinal-VPC
  Versao
    HTTP1
  Tags
    Name
      CarlosFilho-ProvaFinal-TG
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  Register Targets
    CarlosFilho-ProvaFinal-Application		us-esat1b
    CarlosFilho-ProvaFinal-Application		us-esat1b

BALANCEADOR DE CARGA (APPLICATION LOAD BALANCER)
  Nome
    CarlosFilho-ProvaFinal-ALB
  Esquema
    Voltado para Internet
  Tipo
    IPv4
  VPC
    CarlosFilho-ProvaFinal-VPC
    Zonas
      us-east-1a
      Subnet
        CarlosFilho-ProvaFinal-SubnetPublic01
      us-east-1b
      Subnet
        CarlosFilho-ProvaFinal-SubnetPublic02
    Grupo de Segurança
      CarlosFilho-ProvaFinal-SGLnx
    Listener
      HTTP    80    CarlosFilho-ProvaFinal-TG
  Tags
    Name
      CarlosFilho-ProvaFinal-ALB
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 05 #  Criar uma instância com a imagem "ami-0ce99e1aa603296bb" que seja acessível apenas  #
######  de dentro da VPC e anexe um volume EBS extra de 10 GB, utilize o tipo t2.micro.     #
#############################################################################################
INSTANCIA
  Tags
    Name
      Linux01
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  AMI
    ami-0ce99e1aa603296bb
  Instância
    t2.micro
  Par de Chaves
    CarlosFilho-ProvaFinal-CloudTreinamentos.pem
  VPC
    CarlosFilho-ProvaFinal-VPC
  Subnet
    CarlosFilho-ProvaFinal-SubnetPrivate01
  IP Publico
    Deabilitar
  Grupo de Segurança
    CarlosFilho-ProvaFinal-SGLnx
  IAM Instance Profile
    AWSServiceRoleForEc2InstanceConnect
  User Data
    [ -d /mnt/ebs_volume ] || mkdir -p /mnt/ebs_volume
    sed -i -e $'$a\\/dev/xvde   /mnt/ebs_volume   ext4   defaults,nofail   0   2' /etc/fstab

EBS
  Tipo
    SSD (gp3)
  Tamanho
    10GB
  Zona
    us-east-1a
  Tags
    Name
      CarlosFilho-ProvaFinal-EBSVolume
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  Ações >> Associar volume
    Instancia
      Linux01
    Dispositivo
      /dev/sde

TESTE
  lsblk
  [ -d /mnt/ebs_volume ] || mkdir -p /mnt/ebs_volume
  mkfs -t ext4 /dev/xvde
  mount /dev/xvde /mnt/ebs_volume
  sed -i -e $'$a\\/dev/xvde   /mnt/ebs_volume   ext4   defaults,nofail   0   2' /etc/fstab
  echo -ne "Arquivo criado no novo volume EBS, referente\n
  a questao 05, do projeto final do curso de\n
  Especializacao AWS\n
  em:\n
  `date '+%a, %d/%m/%Y %H:%M:%S %Z'`\n
  `TZ=\"America/Fortaleza\" date '+%a, %d/%m/%Y %T LOCAL'`\n" > /mnt/ebs_volume/new-file.txt
  clear && cat /mnt/ebs_volume/new-file.txt
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 06 #  Crie um banco de dados MySQL com acesso PÚBLICO TOTAL utilizando o RDS e coloque    #
######  na resposta desta questão o endpoint, usuário e senha para acesso ao banco, utilize #
#       instância db.t2.micro sem alta disponibilidade.                                     #
#############################################################################################
DB SUBNET GROUP
  Name
    CarlosFilho-ProvaFinal-DBSubnetGroup
  Description
    Subnets publicas para o banco de dados
  VPC
    CarlosFilho-ProvaFinal-VPC
  Avaliabily Zones
    us-east-1a
    us-east-10b
  Subnets
    CarlosFilho-ProvaFinal-SubnetPublic01		10.1.21.0/24
    CarlosFilho-ProvaFinal-SubnetPublic02		10.1.22.0/24

DATABASE
  Creation method
    Standard
  Engine
    MySQL
    Edition
      Community
    Version
      8.0.39
  Templates
    Free Tier
  DB Instance ID
    CarlosFilho-ProvaFinal-DB
  Credentials
    Master username
      master
    Management
      Self managed
    Auto generate password
  Instance configuration type
    db.t2.micro
  Connectivity
    Don’t connect to an EC2 compute resource
    Type
      IPv4
  VPC
    CarlosFilho-ProvaFinal-VPC
  DB Subnet Group
    CarlosFilho-ProvaFinal-DBSubnetGroup
    Public access
      Yes
  VPC Security Group
    CarlosFilho-ProvaFinal-SGDB
  Avaliabily Zones
    No preferences
  Tags
    Name
      CarlosFilho-ProvaFinal-DB
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  Database authentication
    Password authentication
  Additional configuration
    Database Name
      dbteste
    Backup
      disabled
    Encryption
      disabled

Pegar a senha do usuario MASTER

TESTE
  Linux
    mysql -h carlosfilho-provafinal-db.c5cms4mu2wj5.us-east-1.rds.amazonaws.com -umaster -p'16OMg1pkHUIaA1aOFL51' -D dbteste
    show tables;
    exit;

RESPOSTA
  dbteste
    Endpoint
      carlosfilho-provafinal-db.c5cms4mu2wj5.us-east-1.rds.amazonaws.com
    Usuario
      master
    Senha
      16OMg1pkHUIaA1aOFL51
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 07 #  Utilizando o CodeDeploy faça o deploy da nova versão da aplicação dentro das        #
######  instâncias criadas na questão 4. A nova versão da aplicação está disponível no S3   #
#       dentro do bucket "deploy-prova-aws-virginia". Será necessário INSTALAR, CONFIGURAR  #
#       e REINICIAR o agente.                                                               #
#############################################################################################
APPSPEC.YML
version: 0.0
os: linux
files:
  - source: /build/
    destination: /home/ubuntu/app/
hooks:
  BeforeInstall:
    - location: Scripts/before_install.sh
      timeout: 180
      runas: root
  AfterInstall:
    - location: Scripts/after_install.sh
      timeout: 180
      runas: root
  ApplicationStart:
    - location: Scripts/app_start.sh
      timeout: 180
      runas: root

APPLICATION (AppWEB.zip)
  L appspec.yml
  L build
      L ...
  L Scripts
      L after_install.sh
      L app_start.sh
      L before_install.sh

Create application
  Name
    CarlosFilho-ProvaFinal-AppWEB
  Compute
    EC2/On-premises
  Tags
    Name
      CarlosFilho-ProvaFinal-AppWEB
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos

Create a deployment group
  Name
    CarlosFilho-ProvaFinal-AppWEBDeploymentGroup
  Service Role
    CarlosFilho-ProvaFinal-CloudTreinamentos-AWSCodeDeployRole
  Deployment type
    In-place
  Environment configuration
    Amazon EC2 Instances
      Name
        CarlosFilho-ProvaFinal-Application
  Install AWS CodeDeploy Agent
    Never
  Deployment configuration
    CodeDeployDefault.AllAtOnce
  Disable load balancing

Create deployment
  Deployment group
    CarlosFilho-ProvaFinal-AppWEBDeploymentGroup
  Revision type
    My application is stored in Amazon S3
  Revision location
    S3 File URI (s3://carlosfilho-provafinal-cloudtreinamentos-codedeploybucket/app-web.zip)
  Revision filetype
    .zip
  Content options
    Overwrite the content

Consulta:
https://docs.aws.amazon.com/pt_br/codedeploy/latest/userguide/codedeploy-agent-operations-install-linux.html
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 08 #  Crie um novo bucket e configure um site estático com os arquivos presentes na       #
######  URL no fim da questão, configure a página principal e de erro. Após isto, configure #
#       a REPLICAÇÃO deste bucket criado em um novo bucket na mesma região:                 #
#       https://cloudtreinamentos.s3.amazonaws.com/AWS/zip/Site.zip                         #
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 09 #  No serviço de DNS acesse o domínio "profissionalcloud.com" e crie um registro para  #
######  o load balancer com endereço "balance.profissionalcloud.com" e crie um registro     #
#       para o site estático com o endereço "estatico.profissionalcloud.com".               #
#############################################################################################
                                                                                       # OK #
                                                                                       ######



#############################################################################################
# 10 #  No CloudWatch crie um alarme para a quantidade de objetos de dentro do bucket       #
######  "deploy-prova-aws-virginia"  para quando a quantidade de objetos PASSAR de 500 com  #
#       notificação para seu e-mail no SNS. Crie também um 1 gráfico de tráfego do load     #
#       balancer e outros 2 gráficos de sua escolha no painel de nome "virginia".           #
#                                                            OBS: Não se esqueça de salvar. #
#############################################################################################
                                                                                       # OK #
                                                                                       ######



Nunca envie senhas pelo Formulários Google.
Este formulário foi criado em InitD LTDA.
Denunciar abuso
Google Formulários










#############################################################################################
# EXTRA #  Auto Scaling Group                                                               #
#########                                                                                   #
#                                                                                           #
#############################################################################################
MODELO EXECUCAO (LAUNCH TEMPLATE)
  Nome
    CarlosFilho-ProvaFinal-LT
  Descricao
    Modelo de execucao da applicacao WEB
  Tags
    Name
      CarlosFilho-ProvaFinal-LT
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
  AMI
    ami-0ce99e1aa603296bb
  Instância
    t2.micro
  Par de Chaves
    CarlosFilho-ProvaFinal-CloudTreinamentos.pem
  Subnet
    Nao incluir no template
  Grupo de Segurança
    CarlosFilho-ProvaFinal-SGLnx
  Versão de MetaDados
    V1 e V2 (token opcional)
  IAM Instance Profile
    CarlosFilho-ProvaFinal-CloudTreinamentos-AmazonS3ReadOnlyRole
  User Data
    sudo apt update
    sudo apt install -fym ruby-full wget
    cd ~
    wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
    chmod +x ./install
    sudo ./install auto

GRUPO DESTINO (TARGET GROUP)
  Nome
    CarlosFilho-ProvaFinal-TG
  Protocolo
    HTTP    80
  Tipo IP
    IPv4
  VPC
    CarlosFilho-ProvaFinal-VPC
  Versao
    HTTP1
  Tags
    Name
      CarlosFilho-ProvaFinal-TG
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos

BALANCEADOR DE CARGA (APPLICATION LOAD BALANCER)
  Nome
    CarlosFilho-ProvaFinal-ALB
  Esquema
    Voltado para Internet
  Tipo
    IPv4
  VPC
    CarlosFilho-ProvaFinal-VPC
    Zonas
      us-east-1a
      Subnet
        CarlosFilho-ProvaFinal-SubnetPublic01
      us-east-1b
      Subnet
        CarlosFilho-ProvaFinal-SubnetPublic02
    Listener
      HTTP    80    CarlosFilho-ProvaFinal-TG
  Lattice
    Não disponivel
  Verificacao de Integridade EC2
    Ative as verificacoes de integridade do ELB
    Periodo de Tolerancia de Verificacao
      120 segundos
  Habilitar coleta de metricas de grupo no CloudWatch

GRUPO DE ESCALABILIDADE AUTOMATICA (AUTO SCALING GROUP)
  Nome
    CarlosFilho-ProvaFinal-ASG
  Modelo execucao
    CarlosFilho-ProvaFinal-LT
  Versao
    Latest
  VPC
    CarlosFilho-ProvaFinal-VPC
  Zonas
    CarlosFilho-ProvaFinal-SubnetPublic01
    CarlosFilho-ProvaFinal-SubnetPublic02
  Tamanho do Grupo
    Capacidade
      2
  Escalabilidade
    Capacidade Minima
      2
    Capacidade Maxima
      2
  Ajuste de escala automatica
    Nenhuma politica de escalabilidade
  Politica de manutencao de instancias
    Nenhuma politica
  Tags
    Name
      Application
    Common
      CarlosFilho-ProvaFinal-CloudTreinamentos
    Etiquetar novas instancias
#############################################################################################
                                                                                       # OK #
                                                                                       ######
